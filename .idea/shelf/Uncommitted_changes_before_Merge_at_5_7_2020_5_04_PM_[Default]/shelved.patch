Index: src/main/java/DigressUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport javax.swing.filechooser.FileFilter;\r\nimport java.awt.*;\r\nimport java.io.*;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.text.ParseException;\r\nimport java.util.HashMap;\r\nimport java.util.LinkedList;\r\nimport java.util.Scanner;\r\nimport java.util.Random;\r\n\r\npublic class DigressUI {\r\n\r\n    private static Object JFrame;\r\n\r\n    public static Story createStory (){\r\n        Scanner in = new Scanner(System.in);\r\n        String title = \"\", root = \"\", userIn = \"\";\r\n        int currId = 1, parentId;\r\n        String content = \"\";\r\n        boolean creating = true;\r\n        boolean inputValid = true;\r\n        Random ran = new Random();\r\n        int id = ran.nextInt(1000);\r\n\r\n        System.out.println(\"Enter story title: \");\r\n        //todo: need error testing for invalid input here\r\n        title = in.nextLine();\r\n        System.out.println(\"Enter first story content: \");\r\n        root = in.nextLine();\r\n\r\n        Story story = new Story(id, title, root);\r\n        enterCondition(story, 1, 1);\r\n        do {\r\n            System.out.println(\"Add another condition(c), work on a different node(n), or finalize story(x)?\");\r\n            do{\r\n                inputValid = true;\r\n                userIn = in.nextLine();\r\n                if(!(userIn.equalsIgnoreCase(\"c\")||userIn.equalsIgnoreCase(\"n\")||userIn.equalsIgnoreCase(\"x\"))){\r\n                    System.out.println(\"Please enter a valid option\");\r\n                    inputValid = false;\r\n                }\r\n            } while(!inputValid);\r\n\r\n            if(userIn.equalsIgnoreCase(\"c\")){\r\n                enterCondition(story, currId, story.getNextConditions().size()+1);\r\n            }\r\n            else if(userIn.equalsIgnoreCase(\"n\")){\r\n                System.out.println(story.printAllNodes());\r\n                System.out.println(\"Select a node by entering an ID: \");\r\n\r\n                do{\r\n                    inputValid = true;\r\n                    userIn = in.nextLine();\r\n\r\n                    if(!story.getStoryNodes().containsKey(Integer.parseInt(userIn))){\r\n                        System.out.println(\"Please enter a valid ID\");\r\n                        inputValid = false;\r\n                    }\r\n                } while(!inputValid);\r\n\r\n                currId = Integer.parseInt(userIn);\r\n                System.out.println(story.printCurrentNode());\r\n                enterCondition(story, currId, story.getNextConditions().size()+1);\r\n            }\r\n\r\n            else { //if user selects quit\r\n                //todo: Should call a helper function here to make sure every node has at least one child\r\n                creating = false;\r\n            }\r\n        } while(creating);\r\n        return story;\r\n    }\r\n\r\n    public static void importUI() throws IOException {\r\n//        Scanner fileName = new Scanner(System.in);\r\n//        Scanner filePath = new Scanner(System.in);\r\n        JFileChooser fc = new JFileChooser();\r\n        File directory = new File(\"user.home\");\r\n        fc.setCurrentDirectory(new File(System.getProperty(String.valueOf(directory))));\r\n        int result = fc.showOpenDialog((Component) JFrame);\r\n\r\n        fc.setFileFilter(new FileFilter() {\r\n            @Override\r\n            public String getDescription() {\r\n                return \"TXT File (*.txt)\";\r\n            }\r\n\r\n            @Override\r\n            public boolean accept(File file) {\r\n                if (file.isDirectory()) {\r\n                    return true;\r\n                } else {\r\n                    String filename = file.getName().toLowerCase();\r\n                    return filename.endsWith(\".txt\");\r\n                }\r\n            }\r\n        });\r\n\r\n        if (result == JFileChooser.APPROVE_OPTION) {\r\n            // user selects a file\r\n            File selectedFile = fc.getSelectedFile();\r\n            System.out.println(\"Selected file: \" + selectedFile.getAbsolutePath());\r\n            storyFile newFile = new storyFile(selectedFile.getName(), selectedFile.getAbsolutePath());\r\n            newFile.importFile();\r\n        }\r\n//        else if (result == JFileChooser.ERROR_OPTION){\r\n//            // user selects a wrong file\r\n//        }\r\n    }\r\n\r\n    public static void exportUI() throws IOException {\r\n//        Scanner fileName = new Scanner(System.in);\r\n//        String filePath = \"Desktop\";\r\n        JFileChooser fc = new JFileChooser();\r\n        fc.setCurrentDirectory(new File(System.getProperty(\"user.home\")));\r\n        int result = fc.showOpenDialog((Component) JFrame);\r\n\r\n        fc.setFileFilter(new FileFilter() {\r\n            @Override\r\n            public String getDescription() {\r\n                return \"JSON File (*.json)\";\r\n            }\r\n\r\n            @Override\r\n            public boolean accept(File file) {\r\n                if (file.isDirectory()) {\r\n                    return true;\r\n                } else {\r\n                    String filename = file.getName().toLowerCase();\r\n                    return filename.endsWith(\".json\");\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        if (result == JFileChooser.APPROVE_OPTION) {\r\n            // user selects a file\r\n            File selectedFile = fc.getSelectedFile();\r\n            System.out.println(\"Selected file: \" + selectedFile.getAbsolutePath());\r\n//            storyFile newStoryFile = (storyFile) selectedFile;\r\n//            Story newStory = new Story(1, selectedFile.getName(), Files.readAllBytes(Paths.get(((storyFile) selectedFile).getFileName())));\r\n//            newStoryFile.outputFile(newStory);\r\n        }\r\n\r\n    }\r\n\r\n    public static void enterCondition(Story story, int id, int choiceVal) {\r\n        String condition = \"\", userIn = \"\";\r\n        boolean inputValid;\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        //todo Give option to go back\r\n        System.out.println(\"Enter options branching off this node\");\r\n        System.out.print(\"Condition \" + choiceVal + \": \");\r\n        condition = in.nextLine();\r\n        inputValid = true;\r\n\r\n        if(!Node.checkConditionValid(condition)){\r\n            System.out.println(\"Please enter only letters.\");\r\n            inputValid = false;\r\n        } while(!inputValid);\r\n\r\n        System.out.println(\"Link this to an existing node (x) or a new node (n)?\");\r\n        do{\r\n            inputValid = true;\r\n            userIn = in.nextLine();\r\n            if(!(userIn.equalsIgnoreCase(\"x\") || userIn.equalsIgnoreCase(\"n\"))){\r\n                System.out.println(\"Please enter a valid option\");\r\n                inputValid = false;\r\n            }\r\n        } while(!inputValid);\r\n        if(userIn.equalsIgnoreCase(\"x\")){\r\n            String nextId = \"\";\r\n            System.out.println(story.printAllNodes());\r\n            do{\r\n                System.out.print(\"Enter the ID of the node to link to: \");\r\n                inputValid = true;\r\n                nextId = in.nextLine();\r\n\r\n                try{\r\n                    Integer.parseInt(nextId);\r\n                }\r\n                catch(Exception e){\r\n                    System.out.println(\"Please enter a valid number\");\r\n                }\r\n                if(story.findNode(Integer.parseInt(nextId)) == null){\r\n                    System.out.println(\"ID must exist in the story\");\r\n                    inputValid = false;\r\n                }\r\n            } while(!inputValid);\r\n            story.linkNodes(id, Integer.parseInt(nextId), condition);\r\n        }\r\n        else{\r\n            String content = \"\";\r\n            System.out.println(\"Enter node content: \");\r\n            content = in.nextLine();\r\n\r\n            story.addNode(content);\r\n            story.linkNodes(id, story.getCurrNode().getId(), condition);\r\n        }\r\n    }\r\n\r\n    public static void playStory (Story story){\r\n        String choice;\r\n        String userIn = \"y\";\r\n        Scanner in = new Scanner(System.in);\r\n        do {\r\n            boolean playing = true;\r\n            story.setCurrentNode(story.getRoot());\r\n\r\n            while (playing) {\r\n                System.out.println(story.printCurrentNode());\r\n                do {\r\n                    choice = in.nextLine();\r\n                    try {\r\n                        Integer.parseInt(choice);\r\n                    } catch (Exception e) {\r\n                        System.out.println(\"Please enter a valid number\");\r\n                    }\r\n\r\n                    if (Integer.parseInt(choice) > story.getNextConditions().size() || Integer.parseInt(choice) < 1) {\r\n                        System.out.println(\"Please enter a valid number\");\r\n                    }\r\n                } while (Integer.parseInt(choice) > story.getNextConditions().size() || Integer.parseInt(choice) < 1);\r\n                story.getNext(Integer.parseInt(choice));\r\n                if (story.getCurrNode().isEndNode()) {\r\n                    System.out.println(story.getCurrNode().getStoryContent());\r\n                    playing = false;\r\n                }\r\n            }\r\n            System.out.println(\"Done with story\");\r\n            System.out.println(\"Play again? (Y/N)\");\r\n            userIn = in.nextLine();\r\n        } while(!userIn.equalsIgnoreCase(\"n\"));\r\n    }\r\n\r\n    public static void editStoryContent (Story storyChosen, String newContent, int contentToEdit) throws IllegalArgumentException{\r\n        storyChosen.editNodeStoryContent(contentToEdit, newContent);\r\n\r\n        /*if (newContent == \" \" || newContent == \"\") throw new IllegalArgumentException(\"New content cannot be empty\");\r\n        /*else if (storyChosen.getTitle().equalsIgnoreCase(newContent))\r\n            throw new IllegalArgumentException(\"New content entered is same as previous content\");\r\n        else{\r\n            for (int i=0;i<storyChosen.)\r\n            storyChosen.getRoot();\r\n        }\r\n        else if (!storyChosen.getTitle().equalsIgnoreCase(newContent)){\r\n            storyChosen.getRoot();\r\n            editStoryContent\r\n        }*/\r\n    }\r\n\r\n    public static void uploadStory (String fileForUpload) throws IOException {\r\n        int count;\r\n        FileReader fileEx=null;\r\n        try {\r\n            fileEx = new FileReader(fileForUpload);\r\n        }catch (FileNotFoundException e) {\r\n            System.out.println(\"File not found\");\r\n        }\r\n        assert fileEx != null;\r\n        while ((count=fileEx.read())!=-1)\r\n            System.out.print((char)count);\r\n        fileEx.close();\r\n    }\r\n\r\n    public static Story getTestStory(){\r\n        String node1 = \"You are walking down a dark, dingy hallway. Where would you like to go?\";\r\n        String node2 = \"You see cobwebs in front of you and a dark shadowy figure. What would you like to do next?\";\r\n        String node3 = \"There is a giant spider coming down the hallway towards you.\";\r\n        String node4 = \"You see a vial on the ground with a strange glowing liquid.\";\r\n        String node5 = \"You approach the figure and you can see nothing but darkness beneath his hood. 'What brings you this way, traveler?'  he asks.\";\r\n        String node6 = \"You have no weapons and were slain by the spider. Try again?\";\r\n        String node7 = \"You charmed the spider with your great personality. He will now fight alongside you.\";\r\n        String node8 = \"You picked up the vial and put it in your bag.\";\r\n        String node9 = \"For some reason you decided to drink the weird liquid. You died. Whoops.\";\r\n        String node10 = \"You see a glowing door to your right.\";\r\n        String node11 = \"He pulls out a dagger and slays you. Stronger than he looks!\";\r\n        String endNode = \"I don't feel like writing this story anymore lol\";\r\n\r\n        Story testStory = new Story(44, \"Labyrinth\", node1);\r\n\r\n        testStory.addNode(node2);\r\n        testStory.linkNodes(1, 2, \"Continue straight\");\r\n\r\n        testStory.addNode(node3);\r\n        testStory.linkNodes(1, 3,\"Take a left\");\r\n\r\n        testStory.addNode(node4);\r\n        testStory.linkNodes(1, 4, \"Turn right\");\r\n\r\n        testStory.addNode(node5);\r\n        testStory.linkNodes(2, 5, \"Approach the figure\");\r\n\r\n        testStory.linkNodes(2, testStory.getRoot().getId(), \"Retreat backwards\");\r\n\r\n        testStory.addNode(node6);\r\n        testStory.linkNodes(3, 6, \"Fight the spider\");\r\n        testStory.findNode(6).setEndNode();\r\n\r\n        testStory.addNode(node7);\r\n        testStory.linkNodes(3, 7, \"Befriend the spider\");\r\n\r\n        testStory.linkNodes(3, testStory.getRoot().getId(), \"Run back\");\r\n\r\n        testStory.addNode(node8);\r\n        testStory.linkNodes(4, 8, \"Pick it up for later\");\r\n\r\n        testStory.addNode(node9);\r\n        testStory.linkNodes(4, 9, \"Drink it\");\r\n        testStory.findNode(9).setEndNode();\r\n\r\n        testStory.addNode(node10);\r\n        testStory.linkNodes(4, 10, \"Keep moving\");\r\n\r\n        testStory.addNode(node11);\r\n        testStory.linkNodes(5, 11, \"Shut up and fight me fool\");\r\n        testStory.findNode(11).setEndNode();\r\n\r\n        testStory.addNode(endNode);\r\n        testStory.linkNodes(5, 12, \"I am looking for the holy grail\");\r\n        testStory.findNode(12).setEndNode();;\r\n\r\n        testStory.linkNodes(7, 12, \"Continue moving\");\r\n        testStory.linkNodes(8, 12, \"Continue down the hallway\");\r\n        testStory.linkNodes(10, 12, \"Try to enter the room\");\r\n\r\n        return testStory;\r\n    }\r\n\r\n    public static void editTitle (Story storyChosen, String newTitle) throws IllegalArgumentException {\r\n        if (newTitle == \" \" || newTitle == \"\") throw new IllegalArgumentException(\"Title cannot be empty\");\r\n        else if (storyChosen.getTitle().equalsIgnoreCase(newTitle))\r\n            throw new IllegalArgumentException(\"New title entered is same as previous title\");\r\n        else if (!storyChosen.getTitle().equalsIgnoreCase(newTitle)){\r\n            storyChosen = new Story(storyChosen.getID(), newTitle, storyChosen.getRoot().getStoryContent());\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int userChoice;\r\n        String title=null;\r\n        Story storySelected=null;\r\n        LinkedList<Story> storyCol=new LinkedList<Story>();\r\n        do {\r\n            System.out.println(\"What would you like to do?\");\r\n            System.out.println(\"1. Create a Story\");\r\n            System.out.println(\"2. Load a Story\");\r\n            System.out.println(\"3. File Manager\");\r\n            System.out.println(\"5. Exit\");\r\n            userChoice = scanner.nextInt();\r\n            if (userChoice==1){\r\n                Story tempStory = createStory();\r\n                storyCol.add(tempStory);\r\n            }\r\n            else if (userChoice==2){\r\n                System.out.println(\"How you want to read the story?\");\r\n                System.out.println(\"1. Read a story already in the database\");\r\n                System.out.println(\"2. Read an uploaded story\");\r\n                int userChoice2= scanner.nextInt();\r\n                if (userChoice2 == 1) {\r\n                    System.out.println(\"How you want to find the story\");\r\n                    System.out.println(\"1. Search through the name\");\r\n                    System.out.println(\"2. Search through database\");\r\n                    int storyChoice1 = scanner.nextInt();\r\n                    if(storyChoice1==1) {\r\n                        System.out.println(\"Enter story title\");\r\n                        String titleEntered = scanner.nextLine();\r\n                        for(int i=0;i<storyCol.size();i++) {\r\n                            try {\r\n                                if (titleEntered.equalsIgnoreCase(storyCol.get(i).getTitle())){\r\n                                    storySelected=storyCol.get(i);\r\n                                }\r\n                            }catch (IllegalArgumentException e) {\r\n                                System.out.println(\"No story exist with that title\");\r\n                                System.out.println(\"Please Enter a valid story title: \");\r\n                                titleEntered = scanner.nextLine();                             }\r\n                        }\r\n                        System.out.println(\"What do you want to do with the story? (Play/Edit)\");\r\n                        String storyChoice2 = scanner.nextLine();\r\n                        if (storyChoice2.equalsIgnoreCase(\"Play\")) {\r\n                            playStory(storySelected);\r\n                            System.out.println(\"You want to play it again?(Y/N)\");\r\n                            String choice = scanner.nextLine();\r\n                            do {\r\n                                playStory(storySelected);\r\n                            }\r\n                            while (choice.equalsIgnoreCase(\"N\"));\r\n                        } else if (storyChoice2.equalsIgnoreCase(\"Edit\")) {\r\n                            int editChoice;\r\n                            do {\r\n                                System.out.println(\"What you want to edit? \");\r\n                                System.out.println(\"1. Edit the title\");\r\n                                System.out.println(\"2. Add new content\");\r\n                                System.out.println(\"3. Edit existing content\");\r\n                                System.out.println(\"4. Done editing\");\r\n                                editChoice = scanner.nextInt();\r\n                                if (editChoice == 1){\r\n                                    System.out.println(\"Enter new title:\");\r\n                                    String newTitle = scanner.nextLine();\r\n                                    editTitle(storySelected, newTitle);\r\n                                    System.out.println(\"You successfully changed the title of the story\");\r\n                                } else if (editChoice == 2) {\r\n                                    System.out.println(\"Enter parent ID:\");\r\n                                    int parentID = scanner.nextInt();\r\n                                    System.out.println(\"Enter new content:\");\r\n                                    String newContent = scanner.nextLine();\r\n\r\n                                    //ask for end node condition\r\n                                    storySelected.addNode(newContent);\r\n                                    storySelected.linkNodes(parentID, storySelected.getCurrNode().getId(), \"temp condition\");\r\n                                    System.out.println(\"You successfully added content to the story\");\r\n                                } else {\r\n                                    System.out.println(\"Enter node number you want to edit:\");\r\n                                    int numEntered = scanner.nextInt();\r\n                                    System.out.println(\"Enter content for edit:\");\r\n                                    String editedContent = scanner.nextLine();\r\n                                    editStoryContent(storySelected, editedContent, numEntered);\r\n                                    System.out.println(\"You successfully changed the content of the story\");\r\n                                }\r\n                            } while (editChoice != 4);\r\n                        }else System.out.println(\"invalid input\");\r\n                    }\r\n                    else if (storyChoice1==2) {\r\n                        System.out.println(\"Enter title of the story:\");\r\n                        System.out.println(storyCol.toString());\r\n                        String storyChoice = scanner.nextLine();\r\n                        for (int i = 0; i < storyCol.size(); i++) {\r\n                            try {\r\n                                if (storyChoice.equalsIgnoreCase(storyCol.get(i).getTitle())) {\r\n                                    storySelected = storyCol.get(i);\r\n                                }\r\n                            } catch (IllegalArgumentException e) {\r\n                                System.out.println(\"No story exist with that title\");\r\n                                System.out.println(\"Please Enter a valid story title: \");\r\n                                storyChoice = scanner.nextLine();\r\n                            }\r\n                        }\r\n                        System.out.println(\"What do you want to do with the story? (Play/Edit)\");\r\n                        String storyChoice2 = scanner.nextLine();\r\n                        if (storyChoice2.equalsIgnoreCase(\"Play\")) {\r\n                            playStory(storySelected);\r\n                            System.out.println(\"You want to play it again?(Y/N)\");\r\n                            String choice = scanner.nextLine();\r\n                            do {\r\n                                playStory(storySelected);\r\n                            }\r\n                            while (choice.equalsIgnoreCase(\"N\"));\r\n                        } else if (storyChoice2.equalsIgnoreCase(\"Edit\")) {\r\n                            int editChoice;\r\n                            do {\r\n                                System.out.println(\"What you want to edit? \");\r\n                                System.out.println(\"1. Edit the title\");\r\n                                System.out.println(\"2. Add new content\");\r\n                                System.out.println(\"3. Edit existing content\");\r\n                                System.out.println(\"4. Done editing\");\r\n                                editChoice = scanner.nextInt();\r\n                                if (editChoice == 1) {\r\n                                    System.out.println(\"Enter new title:\");\r\n                                    String newTitle = scanner.nextLine();\r\n                                    editTitle(storySelected, newTitle);\r\n                                    System.out.println(\"You successfully changed the title of the story\");\r\n                                } else if (editChoice == 2) {\r\n                                    System.out.println(\"Enter ID:\");\r\n                                    int parentID = scanner.nextInt();\r\n                                    System.out.println(\"Enter new content:\");\r\n                                    String newContent = scanner.nextLine();\r\n\r\n                                    //ask for end node condition\r\n                                    storySelected.addNode(newContent);\r\n                                    storySelected.linkNodes(parentID, storySelected.getCurrNode().getId(), \"Temp condition\");\r\n                                    System.out.println(\"You successfully added content to the story\");\r\n                                } else {\r\n                                    System.out.println(\"Enter node number you want to edit:\");\r\n                                    int numEntered = scanner.nextInt();\r\n                                    System.out.println(\"Enter content for edit:\");\r\n                                    String editedContent = scanner.nextLine();\r\n                                    editStoryContent(storySelected, editedContent, numEntered);\r\n                                    System.out.println(\"You successfully changed the content of the story\");\r\n                                }\r\n                            } while (editChoice != 4);\r\n                        } else System.out.println(\"invalid input\");\r\n                    }\r\n                }else if (userChoice2 == 2) {\r\n                    System.out.println(\"Enter file name\");\r\n                    String fileName = scanner.nextLine();\r\n                    FileReader text = new FileReader(fileName);\r\n                    Scanner scan = new Scanner(text);\r\n                    uploadStory(fileName);\r\n                    //play or edit the story in function\r\n                }\r\n            }\r\n            else if(userChoice == 3){\r\n                System.out.println(\"What would you like to do with you files?\");\r\n                System.out.println(\"1. Import\");\r\n                System.out.println(\"2. Export\");\r\n                int fileChoice = scanner.nextInt();\r\n                if (fileChoice==1){\r\n                    importUI();\r\n                }\r\n                else if (fileChoice==2){\r\n                    exportUI();\r\n                }\r\n//                else if (fileChoice==3){\r\n//                    printFile();\r\n//                }\r\n            }\r\n            else if(userChoice == 4){\r\n                playStory(getTestStory());\r\n            }\r\n        }while (userChoice!=5);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/DigressUI.java	(revision 375ac1d67d7d7fc5d8888048137638d21e4a309c)
+++ src/main/java/DigressUI.java	(date 1588885427265)
@@ -97,13 +97,13 @@
                 }
             }
         });
-
         if (result == JFileChooser.APPROVE_OPTION) {
             // user selects a file
             File selectedFile = fc.getSelectedFile();
             System.out.println("Selected file: " + selectedFile.getAbsolutePath());
-            storyFile newFile = new storyFile(selectedFile.getName(), selectedFile.getAbsolutePath());
-            newFile.importFile();
+            //storyFile newFile = new storyFile(selectedFile.getName(), selectedFile.getAbsolutePath());
+            Story newStory = JsonUtil.fromJsonFile(selectedFile.getAbsolutePath(), Story.class);
+            JsonUtil
         }
 //        else if (result == JFileChooser.ERROR_OPTION){
 //            // user selects a wrong file
